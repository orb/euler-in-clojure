(ns euler.problem29
  (:require [clojure.math.numeric-tower :as num]))

;; Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:

;; 2^2=4, 2^3=8, 2^4=16, 2^5=32
;; 3^2=9, 3^3=27, 3^4=81, 3^5=243
;; 4^2=16, 4^3=64, 4^4=256, 4^5=1024
;; 5^2=25, 5^3=125, 5^4=625, 5^5=3125

;; If they are then placed in numerical order, with any repeats
;; removed, we get the following sequence of 15 distinct terms:

;; 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

;; How many distinct terms are in the sequence generated by ab for 2  a  100 and 2  b  100?

;; a sequence of numbers for a given a and max b
(defn power-seq [a b]
  (map #(num/expt a %)
       (range 2 (inc b))))

;; list of sequences as per definition
(defn power-seqs [n]
  (map #(power-seq % n)
       (range 2 (inc n))))

;; given a list of ordered sequences,
;; return a lazy sequence of the total ordering of all items
;; dups are removed
(defn ordered-multi-merge [all-seqs]  
  (let [firstvals (keep identity (map first all-seqs))]
    (when (seq firstvals)
      (let [min (apply min firstvals)]
        (cons min
              (lazy-seq
               (ordered-multi-merge
                (map #(if (= min (first %)) (rest %) %)
                     all-seqs))))))))

(defn answer
  ([]
     (answer  100))  

  ([n]
     (count (ordered-multi-merge (power-seqs n)))))
